require 'ignore'

module Watchr
  class << self
    def call(files)
      watchers.each do |pattern, block|
        files.delete_if do |file|
          if match = file.match(pattern)
            block.call(match)
            true
          end
        end
      end
    end
    
    def watchers
      @watchers ||= {}
    end
    
    def watch(pattern, &block)
      watchers[Regexp.new(pattern)] = block
    end
    
    def load_watchr_script(script)
      instance_eval File.read("#{script}.watchr")
    end
    
    def system(command)
      execute command
    end
  end
  
  load_watchr_script 'foo'
end

process Watchr

process do |files|
  test_files = files.take_and_map do |file|
    case file
    when %r{^test/.+_test\.rb$}
      file
    when %r{^lib/kicker(\.rb|/validate\.rb|/growl\.rb)$}
      ["test/initialization_test.rb", ("test/filesystem_change_test.rb" if $1 == '.rb')]
    when %r{^lib/kicker/(.+)\.rb$}
      "test/#{$1}_test.rb"
    end
  end
  
  run_ruby_tests test_files
end

process do |files|
  execute("rake docs:generate && open -a Safari html/index.html") if files.delete("README.rdoc")
end